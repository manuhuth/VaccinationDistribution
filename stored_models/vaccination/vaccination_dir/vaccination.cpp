#include "vaccination.h"
#include <array>

namespace amici {

namespace model_vaccination {

std::array<const char*, 98> parameterNames = {
    "lambda1", // p[0]
"p", // p[1]
"gamma", // p[2]
"beta", // p[3]
"omega_vac1_virW", // p[4]
"delta_vac1_virW", // p[5]
"omega_vac2_virW", // p[6]
"delta_vac2_virW", // p[7]
"omega_vac1_virM", // p[8]
"delta_vac1_virM", // p[9]
"omega_vac2_virM", // p[10]
"delta_vac2_virM", // p[11]
"eta_virW", // p[12]
"eta_virM", // p[13]
"susceptible_countryA_vac0_t0", // p[14]
"susceptible_countryA_vac1_t0", // p[15]
"susceptible_countryA_vac2_t0", // p[16]
"susceptible_countryB_vac0_t0", // p[17]
"susceptible_countryB_vac1_t0", // p[18]
"susceptible_countryB_vac2_t0", // p[19]
"infectious_countryA_vac0_virW_t0", // p[20]
"infectious_countryA_vac0_virM_t0", // p[21]
"infectious_countryA_vac1_virW_t0", // p[22]
"infectious_countryA_vac1_virM_t0", // p[23]
"infectious_countryA_vac2_virW_t0", // p[24]
"infectious_countryA_vac2_virM_t0", // p[25]
"infectious_countryB_vac0_virW_t0", // p[26]
"infectious_countryB_vac0_virM_t0", // p[27]
"infectious_countryB_vac1_virW_t0", // p[28]
"infectious_countryB_vac1_virM_t0", // p[29]
"infectious_countryB_vac2_virW_t0", // p[30]
"infectious_countryB_vac2_virM_t0", // p[31]
"recovered_countryA_vac0_virW_t0", // p[32]
"recovered_countryA_vac0_virM_t0", // p[33]
"recovered_countryA_vac1_virW_t0", // p[34]
"recovered_countryA_vac1_virM_t0", // p[35]
"recovered_countryA_vac2_virW_t0", // p[36]
"recovered_countryA_vac2_virM_t0", // p[37]
"recovered_countryB_vac0_virW_t0", // p[38]
"recovered_countryB_vac0_virM_t0", // p[39]
"recovered_countryB_vac1_virW_t0", // p[40]
"recovered_countryB_vac1_virM_t0", // p[41]
"recovered_countryB_vac2_virW_t0", // p[42]
"recovered_countryB_vac2_virM_t0", // p[43]
"dead_countryA_vac0_virW_t0", // p[44]
"dead_countryA_vac0_virM_t0", // p[45]
"dead_countryA_vac1_virW_t0", // p[46]
"dead_countryA_vac1_virM_t0", // p[47]
"dead_countryA_vac2_virW_t0", // p[48]
"dead_countryA_vac2_virM_t0", // p[49]
"dead_countryB_vac0_virW_t0", // p[50]
"dead_countryB_vac0_virM_t0", // p[51]
"dead_countryB_vac1_virW_t0", // p[52]
"dead_countryB_vac1_virM_t0", // p[53]
"dead_countryB_vac2_virW_t0", // p[54]
"dead_countryB_vac2_virM_t0", // p[55]
"number_vac1", // p[56]
"number_vac2", // p[57]
"yy_countryA_vac1_0", // p[58]
"yy_countryA_vac1_1", // p[59]
"yy_countryA_vac1_2", // p[60]
"yy_countryA_vac1_3", // p[61]
"yy_countryA_vac1_4", // p[62]
"yy_countryA_vac1_5", // p[63]
"yy_countryA_vac1_6", // p[64]
"yy_countryA_vac1_7", // p[65]
"yy_countryA_vac1_8", // p[66]
"yy_countryA_vac1_9", // p[67]
"yy_countryA_vac1_10", // p[68]
"yy_countryA_vac1_11", // p[69]
"yy_countryA_vac1_12", // p[70]
"yy_countryA_vac1_13", // p[71]
"yy_countryA_vac1_14", // p[72]
"yy_countryA_vac1_15", // p[73]
"yy_countryA_vac1_16", // p[74]
"yy_countryA_vac1_17", // p[75]
"yy_countryA_vac1_18", // p[76]
"yy_countryA_vac1_19", // p[77]
"yy_countryA_vac2_0", // p[78]
"yy_countryA_vac2_1", // p[79]
"yy_countryA_vac2_2", // p[80]
"yy_countryA_vac2_3", // p[81]
"yy_countryA_vac2_4", // p[82]
"yy_countryA_vac2_5", // p[83]
"yy_countryA_vac2_6", // p[84]
"yy_countryA_vac2_7", // p[85]
"yy_countryA_vac2_8", // p[86]
"yy_countryA_vac2_9", // p[87]
"yy_countryA_vac2_10", // p[88]
"yy_countryA_vac2_11", // p[89]
"yy_countryA_vac2_12", // p[90]
"yy_countryA_vac2_13", // p[91]
"yy_countryA_vac2_14", // p[92]
"yy_countryA_vac2_15", // p[93]
"yy_countryA_vac2_16", // p[94]
"yy_countryA_vac2_17", // p[95]
"yy_countryA_vac2_18", // p[96]
"yy_countryA_vac2_19", // p[97]
};

std::array<const char*, 0> fixedParameterNames = {
    
};

std::array<const char*, 43> stateNames = {
    "susceptible_countryA_vac0", // x_rdata[0]
"susceptible_countryA_vac1", // x_rdata[1]
"susceptible_countryA_vac2", // x_rdata[2]
"susceptible_countryB_vac0", // x_rdata[3]
"susceptible_countryB_vac1", // x_rdata[4]
"susceptible_countryB_vac2", // x_rdata[5]
"infectious_countryA_vac0_virW", // x_rdata[6]
"infectious_countryA_vac0_virM", // x_rdata[7]
"infectious_countryA_vac1_virW", // x_rdata[8]
"infectious_countryA_vac1_virM", // x_rdata[9]
"infectious_countryA_vac2_virW", // x_rdata[10]
"infectious_countryA_vac2_virM", // x_rdata[11]
"infectious_countryB_vac0_virW", // x_rdata[12]
"infectious_countryB_vac0_virM", // x_rdata[13]
"infectious_countryB_vac1_virW", // x_rdata[14]
"infectious_countryB_vac1_virM", // x_rdata[15]
"infectious_countryB_vac2_virW", // x_rdata[16]
"infectious_countryB_vac2_virM", // x_rdata[17]
"recovered_countryA_vac0_virW", // x_rdata[18]
"recovered_countryA_vac0_virM", // x_rdata[19]
"recovered_countryA_vac1_virW", // x_rdata[20]
"recovered_countryA_vac1_virM", // x_rdata[21]
"recovered_countryA_vac2_virW", // x_rdata[22]
"recovered_countryA_vac2_virM", // x_rdata[23]
"recovered_countryB_vac0_virW", // x_rdata[24]
"recovered_countryB_vac0_virM", // x_rdata[25]
"recovered_countryB_vac1_virW", // x_rdata[26]
"recovered_countryB_vac1_virM", // x_rdata[27]
"recovered_countryB_vac2_virW", // x_rdata[28]
"recovered_countryB_vac2_virM", // x_rdata[29]
"dead_countryA_vac0_virW", // x_rdata[30]
"dead_countryA_vac0_virM", // x_rdata[31]
"dead_countryA_vac1_virW", // x_rdata[32]
"dead_countryA_vac1_virM", // x_rdata[33]
"dead_countryA_vac2_virW", // x_rdata[34]
"dead_countryA_vac2_virM", // x_rdata[35]
"dead_countryB_vac0_virW", // x_rdata[36]
"dead_countryB_vac0_virM", // x_rdata[37]
"dead_countryB_vac1_virW", // x_rdata[38]
"dead_countryB_vac1_virM", // x_rdata[39]
"dead_countryB_vac2_virW", // x_rdata[40]
"dead_countryB_vac2_virM", // x_rdata[41]
"t", // x_rdata[42]
};

std::array<const char*, 55> observableNames = {
    "susceptible_countryA_vac0", // y[0]
"susceptible_countryA_vac1", // y[1]
"susceptible_countryA_vac2", // y[2]
"susceptible_countryB_vac0", // y[3]
"susceptible_countryB_vac1", // y[4]
"susceptible_countryB_vac2", // y[5]
"infectious_countryA_vac0_virW", // y[6]
"infectious_countryA_vac0_virM", // y[7]
"infectious_countryA_vac1_virW", // y[8]
"infectious_countryA_vac1_virM", // y[9]
"infectious_countryA_vac2_virW", // y[10]
"infectious_countryA_vac2_virM", // y[11]
"infectious_countryB_vac0_virW", // y[12]
"infectious_countryB_vac0_virM", // y[13]
"infectious_countryB_vac1_virW", // y[14]
"infectious_countryB_vac1_virM", // y[15]
"infectious_countryB_vac2_virW", // y[16]
"infectious_countryB_vac2_virM", // y[17]
"recovered_countryA_vac0_virW", // y[18]
"recovered_countryA_vac0_virM", // y[19]
"recovered_countryA_vac1_virW", // y[20]
"recovered_countryA_vac1_virM", // y[21]
"recovered_countryA_vac2_virW", // y[22]
"recovered_countryA_vac2_virM", // y[23]
"recovered_countryB_vac0_virW", // y[24]
"recovered_countryB_vac0_virM", // y[25]
"recovered_countryB_vac1_virW", // y[26]
"recovered_countryB_vac1_virM", // y[27]
"recovered_countryB_vac2_virW", // y[28]
"recovered_countryB_vac2_virM", // y[29]
"dead_countryA_vac0_virW", // y[30]
"dead_countryA_vac0_virM", // y[31]
"dead_countryA_vac1_virW", // y[32]
"dead_countryA_vac1_virM", // y[33]
"dead_countryA_vac2_virW", // y[34]
"dead_countryA_vac2_virM", // y[35]
"dead_countryB_vac0_virW", // y[36]
"dead_countryB_vac0_virM", // y[37]
"dead_countryB_vac1_virW", // y[38]
"dead_countryB_vac1_virM", // y[39]
"dead_countryB_vac2_virW", // y[40]
"dead_countryB_vac2_virM", // y[41]
"t", // y[42]
"proportion_countryA_vac1", // y[43]
"proportion_countryA_vac2", // y[44]
"proportion_countryB_vac1", // y[45]
"proportion_countryB_vac2", // y[46]
"nu_countryA_vac1", // y[47]
"nu_countryB_vac1", // y[48]
"nu_countryA_vac2", // y[49]
"nu_countryB_vac2", // y[50]
"spline_countryA_vac1", // y[51]
"spline_countryA_vac2", // y[52]
"countryA", // y[53]
"countryB", // y[54]
};

std::array<const char*, 118> expressionNames = {
    "spline_countryA_vac2", // w[0]
"spline_countryA_vac1", // w[1]
"proportion_countryA_vac1", // w[2]
"proportion_countryA_vac2", // w[3]
"proportion_countryB_vac1", // w[4]
"nu_countryA_vac2", // w[5]
"proportion_countryB_vac2", // w[6]
"nu_countryA_vac1", // w[7]
"nu_countryB_vac1", // w[8]
"nu_countryB_vac2", // w[9]
"flux_r0", // w[10]
"flux_r1", // w[11]
"flux_r2", // w[12]
"flux_r3", // w[13]
"flux_r4", // w[14]
"flux_r5", // w[15]
"flux_r6", // w[16]
"flux_r7", // w[17]
"flux_r8", // w[18]
"flux_r9", // w[19]
"flux_r10", // w[20]
"flux_r11", // w[21]
"flux_r12", // w[22]
"flux_r13", // w[23]
"flux_r14", // w[24]
"flux_r15", // w[25]
"flux_r16", // w[26]
"flux_r17", // w[27]
"flux_r18", // w[28]
"flux_r19", // w[29]
"flux_r20", // w[30]
"flux_r21", // w[31]
"flux_r22", // w[32]
"flux_r23", // w[33]
"flux_r24", // w[34]
"flux_r25", // w[35]
"flux_r26", // w[36]
"flux_r27", // w[37]
"flux_r28", // w[38]
"flux_r29", // w[39]
"flux_r30", // w[40]
"flux_r31", // w[41]
"flux_r32", // w[42]
"flux_r33", // w[43]
"flux_r34", // w[44]
"flux_r35", // w[45]
"flux_r36", // w[46]
"flux_r37", // w[47]
"flux_r38", // w[48]
"flux_r39", // w[49]
"flux_r40", // w[50]
"flux_r41", // w[51]
"flux_r42", // w[52]
"flux_r43", // w[53]
"flux_r44", // w[54]
"flux_r45", // w[55]
"flux_r46", // w[56]
"flux_r47", // w[57]
"flux_r48", // w[58]
"flux_r49", // w[59]
"flux_r50", // w[60]
"flux_r51", // w[61]
"flux_r52", // w[62]
"flux_r53", // w[63]
"flux_r54", // w[64]
"flux_r55", // w[65]
"flux_r56", // w[66]
"flux_r57", // w[67]
"flux_r58", // w[68]
"flux_r59", // w[69]
"flux_r60", // w[70]
"flux_r61", // w[71]
"flux_r62", // w[72]
"flux_r63", // w[73]
"flux_r64", // w[74]
"flux_r65", // w[75]
"flux_r66", // w[76]
"flux_r67", // w[77]
"flux_r68", // w[78]
"flux_r69", // w[79]
"flux_r70", // w[80]
"flux_r71", // w[81]
"flux_r72", // w[82]
"flux_r73", // w[83]
"flux_r74", // w[84]
"flux_r75", // w[85]
"flux_r76", // w[86]
"flux_r77", // w[87]
"flux_r78", // w[88]
"flux_r79", // w[89]
"flux_r80", // w[90]
"flux_r81", // w[91]
"flux_r82", // w[92]
"flux_r83", // w[93]
"flux_r84", // w[94]
"flux_r85", // w[95]
"flux_r86", // w[96]
"flux_r87", // w[97]
"flux_r88", // w[98]
"flux_r89", // w[99]
"flux_r90", // w[100]
"flux_r91", // w[101]
"flux_r92", // w[102]
"flux_r93", // w[103]
"flux_r94", // w[104]
"flux_r95", // w[105]
"flux_r96", // w[106]
"flux_r97", // w[107]
"flux_r98", // w[108]
"flux_r99", // w[109]
"flux_r100", // w[110]
"flux_r101", // w[111]
"flux_r102", // w[112]
"flux_r103", // w[113]
"flux_r104", // w[114]
"flux_r105", // w[115]
"flux_r106", // w[116]
"flux_r107", // w[117]
};

std::array<const char*, 98> parameterIds = {
    "lambda1", // p[0]
"amici_p", // p[1]
"gamma", // p[2]
"beta", // p[3]
"omega_vac1_virW", // p[4]
"delta_vac1_virW", // p[5]
"omega_vac2_virW", // p[6]
"delta_vac2_virW", // p[7]
"omega_vac1_virM", // p[8]
"delta_vac1_virM", // p[9]
"omega_vac2_virM", // p[10]
"delta_vac2_virM", // p[11]
"eta_virW", // p[12]
"eta_virM", // p[13]
"susceptible_countryA_vac0_t0", // p[14]
"susceptible_countryA_vac1_t0", // p[15]
"susceptible_countryA_vac2_t0", // p[16]
"susceptible_countryB_vac0_t0", // p[17]
"susceptible_countryB_vac1_t0", // p[18]
"susceptible_countryB_vac2_t0", // p[19]
"infectious_countryA_vac0_virW_t0", // p[20]
"infectious_countryA_vac0_virM_t0", // p[21]
"infectious_countryA_vac1_virW_t0", // p[22]
"infectious_countryA_vac1_virM_t0", // p[23]
"infectious_countryA_vac2_virW_t0", // p[24]
"infectious_countryA_vac2_virM_t0", // p[25]
"infectious_countryB_vac0_virW_t0", // p[26]
"infectious_countryB_vac0_virM_t0", // p[27]
"infectious_countryB_vac1_virW_t0", // p[28]
"infectious_countryB_vac1_virM_t0", // p[29]
"infectious_countryB_vac2_virW_t0", // p[30]
"infectious_countryB_vac2_virM_t0", // p[31]
"recovered_countryA_vac0_virW_t0", // p[32]
"recovered_countryA_vac0_virM_t0", // p[33]
"recovered_countryA_vac1_virW_t0", // p[34]
"recovered_countryA_vac1_virM_t0", // p[35]
"recovered_countryA_vac2_virW_t0", // p[36]
"recovered_countryA_vac2_virM_t0", // p[37]
"recovered_countryB_vac0_virW_t0", // p[38]
"recovered_countryB_vac0_virM_t0", // p[39]
"recovered_countryB_vac1_virW_t0", // p[40]
"recovered_countryB_vac1_virM_t0", // p[41]
"recovered_countryB_vac2_virW_t0", // p[42]
"recovered_countryB_vac2_virM_t0", // p[43]
"dead_countryA_vac0_virW_t0", // p[44]
"dead_countryA_vac0_virM_t0", // p[45]
"dead_countryA_vac1_virW_t0", // p[46]
"dead_countryA_vac1_virM_t0", // p[47]
"dead_countryA_vac2_virW_t0", // p[48]
"dead_countryA_vac2_virM_t0", // p[49]
"dead_countryB_vac0_virW_t0", // p[50]
"dead_countryB_vac0_virM_t0", // p[51]
"dead_countryB_vac1_virW_t0", // p[52]
"dead_countryB_vac1_virM_t0", // p[53]
"dead_countryB_vac2_virW_t0", // p[54]
"dead_countryB_vac2_virM_t0", // p[55]
"number_vac1", // p[56]
"number_vac2", // p[57]
"yy_countryA_vac1_0", // p[58]
"yy_countryA_vac1_1", // p[59]
"yy_countryA_vac1_2", // p[60]
"yy_countryA_vac1_3", // p[61]
"yy_countryA_vac1_4", // p[62]
"yy_countryA_vac1_5", // p[63]
"yy_countryA_vac1_6", // p[64]
"yy_countryA_vac1_7", // p[65]
"yy_countryA_vac1_8", // p[66]
"yy_countryA_vac1_9", // p[67]
"yy_countryA_vac1_10", // p[68]
"yy_countryA_vac1_11", // p[69]
"yy_countryA_vac1_12", // p[70]
"yy_countryA_vac1_13", // p[71]
"yy_countryA_vac1_14", // p[72]
"yy_countryA_vac1_15", // p[73]
"yy_countryA_vac1_16", // p[74]
"yy_countryA_vac1_17", // p[75]
"yy_countryA_vac1_18", // p[76]
"yy_countryA_vac1_19", // p[77]
"yy_countryA_vac2_0", // p[78]
"yy_countryA_vac2_1", // p[79]
"yy_countryA_vac2_2", // p[80]
"yy_countryA_vac2_3", // p[81]
"yy_countryA_vac2_4", // p[82]
"yy_countryA_vac2_5", // p[83]
"yy_countryA_vac2_6", // p[84]
"yy_countryA_vac2_7", // p[85]
"yy_countryA_vac2_8", // p[86]
"yy_countryA_vac2_9", // p[87]
"yy_countryA_vac2_10", // p[88]
"yy_countryA_vac2_11", // p[89]
"yy_countryA_vac2_12", // p[90]
"yy_countryA_vac2_13", // p[91]
"yy_countryA_vac2_14", // p[92]
"yy_countryA_vac2_15", // p[93]
"yy_countryA_vac2_16", // p[94]
"yy_countryA_vac2_17", // p[95]
"yy_countryA_vac2_18", // p[96]
"yy_countryA_vac2_19", // p[97]
};

std::array<const char*, 0> fixedParameterIds = {
    
};

std::array<const char*, 43> stateIds = {
    "susceptible_countryA_vac0", // x_rdata[0]
"susceptible_countryA_vac1", // x_rdata[1]
"susceptible_countryA_vac2", // x_rdata[2]
"susceptible_countryB_vac0", // x_rdata[3]
"susceptible_countryB_vac1", // x_rdata[4]
"susceptible_countryB_vac2", // x_rdata[5]
"infectious_countryA_vac0_virW", // x_rdata[6]
"infectious_countryA_vac0_virM", // x_rdata[7]
"infectious_countryA_vac1_virW", // x_rdata[8]
"infectious_countryA_vac1_virM", // x_rdata[9]
"infectious_countryA_vac2_virW", // x_rdata[10]
"infectious_countryA_vac2_virM", // x_rdata[11]
"infectious_countryB_vac0_virW", // x_rdata[12]
"infectious_countryB_vac0_virM", // x_rdata[13]
"infectious_countryB_vac1_virW", // x_rdata[14]
"infectious_countryB_vac1_virM", // x_rdata[15]
"infectious_countryB_vac2_virW", // x_rdata[16]
"infectious_countryB_vac2_virM", // x_rdata[17]
"recovered_countryA_vac0_virW", // x_rdata[18]
"recovered_countryA_vac0_virM", // x_rdata[19]
"recovered_countryA_vac1_virW", // x_rdata[20]
"recovered_countryA_vac1_virM", // x_rdata[21]
"recovered_countryA_vac2_virW", // x_rdata[22]
"recovered_countryA_vac2_virM", // x_rdata[23]
"recovered_countryB_vac0_virW", // x_rdata[24]
"recovered_countryB_vac0_virM", // x_rdata[25]
"recovered_countryB_vac1_virW", // x_rdata[26]
"recovered_countryB_vac1_virM", // x_rdata[27]
"recovered_countryB_vac2_virW", // x_rdata[28]
"recovered_countryB_vac2_virM", // x_rdata[29]
"dead_countryA_vac0_virW", // x_rdata[30]
"dead_countryA_vac0_virM", // x_rdata[31]
"dead_countryA_vac1_virW", // x_rdata[32]
"dead_countryA_vac1_virM", // x_rdata[33]
"dead_countryA_vac2_virW", // x_rdata[34]
"dead_countryA_vac2_virM", // x_rdata[35]
"dead_countryB_vac0_virW", // x_rdata[36]
"dead_countryB_vac0_virM", // x_rdata[37]
"dead_countryB_vac1_virW", // x_rdata[38]
"dead_countryB_vac1_virM", // x_rdata[39]
"dead_countryB_vac2_virW", // x_rdata[40]
"dead_countryB_vac2_virM", // x_rdata[41]
"amici_t", // x_rdata[42]
};

std::array<const char*, 55> observableIds = {
    "ysusceptible_countryA_vac0", // y[0]
"ysusceptible_countryA_vac1", // y[1]
"ysusceptible_countryA_vac2", // y[2]
"ysusceptible_countryB_vac0", // y[3]
"ysusceptible_countryB_vac1", // y[4]
"ysusceptible_countryB_vac2", // y[5]
"yinfectious_countryA_vac0_virW", // y[6]
"yinfectious_countryA_vac0_virM", // y[7]
"yinfectious_countryA_vac1_virW", // y[8]
"yinfectious_countryA_vac1_virM", // y[9]
"yinfectious_countryA_vac2_virW", // y[10]
"yinfectious_countryA_vac2_virM", // y[11]
"yinfectious_countryB_vac0_virW", // y[12]
"yinfectious_countryB_vac0_virM", // y[13]
"yinfectious_countryB_vac1_virW", // y[14]
"yinfectious_countryB_vac1_virM", // y[15]
"yinfectious_countryB_vac2_virW", // y[16]
"yinfectious_countryB_vac2_virM", // y[17]
"yrecovered_countryA_vac0_virW", // y[18]
"yrecovered_countryA_vac0_virM", // y[19]
"yrecovered_countryA_vac1_virW", // y[20]
"yrecovered_countryA_vac1_virM", // y[21]
"yrecovered_countryA_vac2_virW", // y[22]
"yrecovered_countryA_vac2_virM", // y[23]
"yrecovered_countryB_vac0_virW", // y[24]
"yrecovered_countryB_vac0_virM", // y[25]
"yrecovered_countryB_vac1_virW", // y[26]
"yrecovered_countryB_vac1_virM", // y[27]
"yrecovered_countryB_vac2_virW", // y[28]
"yrecovered_countryB_vac2_virM", // y[29]
"ydead_countryA_vac0_virW", // y[30]
"ydead_countryA_vac0_virM", // y[31]
"ydead_countryA_vac1_virW", // y[32]
"ydead_countryA_vac1_virM", // y[33]
"ydead_countryA_vac2_virW", // y[34]
"ydead_countryA_vac2_virM", // y[35]
"ydead_countryB_vac0_virW", // y[36]
"ydead_countryB_vac0_virM", // y[37]
"ydead_countryB_vac1_virW", // y[38]
"ydead_countryB_vac1_virM", // y[39]
"ydead_countryB_vac2_virW", // y[40]
"ydead_countryB_vac2_virM", // y[41]
"yt", // y[42]
"yproportion_countryA_vac1", // y[43]
"yproportion_countryA_vac2", // y[44]
"yproportion_countryB_vac1", // y[45]
"yproportion_countryB_vac2", // y[46]
"ynu_countryA_vac1", // y[47]
"ynu_countryB_vac1", // y[48]
"ynu_countryA_vac2", // y[49]
"ynu_countryB_vac2", // y[50]
"yspline_countryA_vac1", // y[51]
"yspline_countryA_vac2", // y[52]
"ycountryA", // y[53]
"ycountryB", // y[54]
};

std::array<const char*, 118> expressionIds = {
    "spline_countryA_vac2", // w[0]
"spline_countryA_vac1", // w[1]
"proportion_countryA_vac1", // w[2]
"proportion_countryA_vac2", // w[3]
"proportion_countryB_vac1", // w[4]
"nu_countryA_vac2", // w[5]
"proportion_countryB_vac2", // w[6]
"nu_countryA_vac1", // w[7]
"nu_countryB_vac1", // w[8]
"nu_countryB_vac2", // w[9]
"flux_r0", // w[10]
"flux_r1", // w[11]
"flux_r2", // w[12]
"flux_r3", // w[13]
"flux_r4", // w[14]
"flux_r5", // w[15]
"flux_r6", // w[16]
"flux_r7", // w[17]
"flux_r8", // w[18]
"flux_r9", // w[19]
"flux_r10", // w[20]
"flux_r11", // w[21]
"flux_r12", // w[22]
"flux_r13", // w[23]
"flux_r14", // w[24]
"flux_r15", // w[25]
"flux_r16", // w[26]
"flux_r17", // w[27]
"flux_r18", // w[28]
"flux_r19", // w[29]
"flux_r20", // w[30]
"flux_r21", // w[31]
"flux_r22", // w[32]
"flux_r23", // w[33]
"flux_r24", // w[34]
"flux_r25", // w[35]
"flux_r26", // w[36]
"flux_r27", // w[37]
"flux_r28", // w[38]
"flux_r29", // w[39]
"flux_r30", // w[40]
"flux_r31", // w[41]
"flux_r32", // w[42]
"flux_r33", // w[43]
"flux_r34", // w[44]
"flux_r35", // w[45]
"flux_r36", // w[46]
"flux_r37", // w[47]
"flux_r38", // w[48]
"flux_r39", // w[49]
"flux_r40", // w[50]
"flux_r41", // w[51]
"flux_r42", // w[52]
"flux_r43", // w[53]
"flux_r44", // w[54]
"flux_r45", // w[55]
"flux_r46", // w[56]
"flux_r47", // w[57]
"flux_r48", // w[58]
"flux_r49", // w[59]
"flux_r50", // w[60]
"flux_r51", // w[61]
"flux_r52", // w[62]
"flux_r53", // w[63]
"flux_r54", // w[64]
"flux_r55", // w[65]
"flux_r56", // w[66]
"flux_r57", // w[67]
"flux_r58", // w[68]
"flux_r59", // w[69]
"flux_r60", // w[70]
"flux_r61", // w[71]
"flux_r62", // w[72]
"flux_r63", // w[73]
"flux_r64", // w[74]
"flux_r65", // w[75]
"flux_r66", // w[76]
"flux_r67", // w[77]
"flux_r68", // w[78]
"flux_r69", // w[79]
"flux_r70", // w[80]
"flux_r71", // w[81]
"flux_r72", // w[82]
"flux_r73", // w[83]
"flux_r74", // w[84]
"flux_r75", // w[85]
"flux_r76", // w[86]
"flux_r77", // w[87]
"flux_r78", // w[88]
"flux_r79", // w[89]
"flux_r80", // w[90]
"flux_r81", // w[91]
"flux_r82", // w[92]
"flux_r83", // w[93]
"flux_r84", // w[94]
"flux_r85", // w[95]
"flux_r86", // w[96]
"flux_r87", // w[97]
"flux_r88", // w[98]
"flux_r89", // w[99]
"flux_r90", // w[100]
"flux_r91", // w[101]
"flux_r92", // w[102]
"flux_r93", // w[103]
"flux_r94", // w[104]
"flux_r95", // w[105]
"flux_r96", // w[106]
"flux_r97", // w[107]
"flux_r98", // w[108]
"flux_r99", // w[109]
"flux_r100", // w[110]
"flux_r101", // w[111]
"flux_r102", // w[112]
"flux_r103", // w[113]
"flux_r104", // w[114]
"flux_r105", // w[115]
"flux_r106", // w[116]
"flux_r107", // w[117]
};

} // namespace model_vaccination

} // namespace amici
