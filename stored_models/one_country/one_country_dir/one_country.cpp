#include "one_country.h"
#include <array>

namespace amici {

namespace model_one_country {

std::array<const char*, 37> parameterNames = {
    "lambda1", // p[0]
"p", // p[1]
"gamma", // p[2]
"beta", // p[3]
"nu_vac1", // p[4]
"nu_vac2", // p[5]
"omega_vac1_virW", // p[6]
"delta_vac1_virW", // p[7]
"omega_vac2_virW", // p[8]
"delta_vac2_virW", // p[9]
"omega_vac1_virM", // p[10]
"delta_vac1_virM", // p[11]
"omega_vac2_virM", // p[12]
"delta_vac2_virM", // p[13]
"eta_virW", // p[14]
"eta_virM", // p[15]
"susceptible_countryA_vac0_t0", // p[16]
"susceptible_countryA_vac1_t0", // p[17]
"susceptible_countryA_vac2_t0", // p[18]
"infectious_countryA_vac0_virW_t0", // p[19]
"infectious_countryA_vac0_virM_t0", // p[20]
"infectious_countryA_vac1_virW_t0", // p[21]
"infectious_countryA_vac1_virM_t0", // p[22]
"infectious_countryA_vac2_virW_t0", // p[23]
"infectious_countryA_vac2_virM_t0", // p[24]
"recovered_countryA_vac0_virW_t0", // p[25]
"recovered_countryA_vac0_virM_t0", // p[26]
"recovered_countryA_vac1_virW_t0", // p[27]
"recovered_countryA_vac1_virM_t0", // p[28]
"recovered_countryA_vac2_virW_t0", // p[29]
"recovered_countryA_vac2_virM_t0", // p[30]
"dead_countryA_vac0_virW_t0", // p[31]
"dead_countryA_vac0_virM_t0", // p[32]
"dead_countryA_vac1_virW_t0", // p[33]
"dead_countryA_vac1_virM_t0", // p[34]
"dead_countryA_vac2_virW_t0", // p[35]
"dead_countryA_vac2_virM_t0", // p[36]
};

std::array<const char*, 0> fixedParameterNames = {
    
};

std::array<const char*, 21> stateNames = {
    "susceptible_countryA_vac0", // x_rdata[0]
"susceptible_countryA_vac1", // x_rdata[1]
"susceptible_countryA_vac2", // x_rdata[2]
"infectious_countryA_vac0_virW", // x_rdata[3]
"infectious_countryA_vac0_virM", // x_rdata[4]
"infectious_countryA_vac1_virW", // x_rdata[5]
"infectious_countryA_vac1_virM", // x_rdata[6]
"infectious_countryA_vac2_virW", // x_rdata[7]
"infectious_countryA_vac2_virM", // x_rdata[8]
"recovered_countryA_vac0_virW", // x_rdata[9]
"recovered_countryA_vac0_virM", // x_rdata[10]
"recovered_countryA_vac1_virW", // x_rdata[11]
"recovered_countryA_vac1_virM", // x_rdata[12]
"recovered_countryA_vac2_virW", // x_rdata[13]
"recovered_countryA_vac2_virM", // x_rdata[14]
"dead_countryA_vac0_virW", // x_rdata[15]
"dead_countryA_vac0_virM", // x_rdata[16]
"dead_countryA_vac1_virW", // x_rdata[17]
"dead_countryA_vac1_virM", // x_rdata[18]
"dead_countryA_vac2_virW", // x_rdata[19]
"dead_countryA_vac2_virM", // x_rdata[20]
};

std::array<const char*, 22> observableNames = {
    "susceptible_countryA_vac0", // y[0]
"susceptible_countryA_vac1", // y[1]
"susceptible_countryA_vac2", // y[2]
"infectious_countryA_vac0_virW", // y[3]
"infectious_countryA_vac0_virM", // y[4]
"infectious_countryA_vac1_virW", // y[5]
"infectious_countryA_vac1_virM", // y[6]
"infectious_countryA_vac2_virW", // y[7]
"infectious_countryA_vac2_virM", // y[8]
"recovered_countryA_vac0_virW", // y[9]
"recovered_countryA_vac0_virM", // y[10]
"recovered_countryA_vac1_virW", // y[11]
"recovered_countryA_vac1_virM", // y[12]
"recovered_countryA_vac2_virW", // y[13]
"recovered_countryA_vac2_virM", // y[14]
"dead_countryA_vac0_virW", // y[15]
"dead_countryA_vac0_virM", // y[16]
"dead_countryA_vac1_virW", // y[17]
"dead_countryA_vac1_virM", // y[18]
"dead_countryA_vac2_virW", // y[19]
"dead_countryA_vac2_virM", // y[20]
"countryA", // y[21]
};

std::array<const char*, 36> expressionNames = {
    "flux_r0", // w[0]
"flux_r1", // w[1]
"flux_r2", // w[2]
"flux_r3", // w[3]
"flux_r4", // w[4]
"flux_r5", // w[5]
"flux_r6", // w[6]
"flux_r7", // w[7]
"flux_r8", // w[8]
"flux_r9", // w[9]
"flux_r10", // w[10]
"flux_r11", // w[11]
"flux_r12", // w[12]
"flux_r13", // w[13]
"flux_r14", // w[14]
"flux_r15", // w[15]
"flux_r16", // w[16]
"flux_r17", // w[17]
"flux_r18", // w[18]
"flux_r19", // w[19]
"flux_r20", // w[20]
"flux_r21", // w[21]
"flux_r22", // w[22]
"flux_r23", // w[23]
"flux_r24", // w[24]
"flux_r25", // w[25]
"flux_r26", // w[26]
"flux_r27", // w[27]
"flux_r28", // w[28]
"flux_r29", // w[29]
"flux_r30", // w[30]
"flux_r31", // w[31]
"flux_r32", // w[32]
"flux_r33", // w[33]
"flux_r34", // w[34]
"flux_r35", // w[35]
};

std::array<const char*, 37> parameterIds = {
    "lambda1", // p[0]
"amici_p", // p[1]
"gamma", // p[2]
"beta", // p[3]
"nu_vac1", // p[4]
"nu_vac2", // p[5]
"omega_vac1_virW", // p[6]
"delta_vac1_virW", // p[7]
"omega_vac2_virW", // p[8]
"delta_vac2_virW", // p[9]
"omega_vac1_virM", // p[10]
"delta_vac1_virM", // p[11]
"omega_vac2_virM", // p[12]
"delta_vac2_virM", // p[13]
"eta_virW", // p[14]
"eta_virM", // p[15]
"susceptible_countryA_vac0_t0", // p[16]
"susceptible_countryA_vac1_t0", // p[17]
"susceptible_countryA_vac2_t0", // p[18]
"infectious_countryA_vac0_virW_t0", // p[19]
"infectious_countryA_vac0_virM_t0", // p[20]
"infectious_countryA_vac1_virW_t0", // p[21]
"infectious_countryA_vac1_virM_t0", // p[22]
"infectious_countryA_vac2_virW_t0", // p[23]
"infectious_countryA_vac2_virM_t0", // p[24]
"recovered_countryA_vac0_virW_t0", // p[25]
"recovered_countryA_vac0_virM_t0", // p[26]
"recovered_countryA_vac1_virW_t0", // p[27]
"recovered_countryA_vac1_virM_t0", // p[28]
"recovered_countryA_vac2_virW_t0", // p[29]
"recovered_countryA_vac2_virM_t0", // p[30]
"dead_countryA_vac0_virW_t0", // p[31]
"dead_countryA_vac0_virM_t0", // p[32]
"dead_countryA_vac1_virW_t0", // p[33]
"dead_countryA_vac1_virM_t0", // p[34]
"dead_countryA_vac2_virW_t0", // p[35]
"dead_countryA_vac2_virM_t0", // p[36]
};

std::array<const char*, 0> fixedParameterIds = {
    
};

std::array<const char*, 21> stateIds = {
    "susceptible_countryA_vac0", // x_rdata[0]
"susceptible_countryA_vac1", // x_rdata[1]
"susceptible_countryA_vac2", // x_rdata[2]
"infectious_countryA_vac0_virW", // x_rdata[3]
"infectious_countryA_vac0_virM", // x_rdata[4]
"infectious_countryA_vac1_virW", // x_rdata[5]
"infectious_countryA_vac1_virM", // x_rdata[6]
"infectious_countryA_vac2_virW", // x_rdata[7]
"infectious_countryA_vac2_virM", // x_rdata[8]
"recovered_countryA_vac0_virW", // x_rdata[9]
"recovered_countryA_vac0_virM", // x_rdata[10]
"recovered_countryA_vac1_virW", // x_rdata[11]
"recovered_countryA_vac1_virM", // x_rdata[12]
"recovered_countryA_vac2_virW", // x_rdata[13]
"recovered_countryA_vac2_virM", // x_rdata[14]
"dead_countryA_vac0_virW", // x_rdata[15]
"dead_countryA_vac0_virM", // x_rdata[16]
"dead_countryA_vac1_virW", // x_rdata[17]
"dead_countryA_vac1_virM", // x_rdata[18]
"dead_countryA_vac2_virW", // x_rdata[19]
"dead_countryA_vac2_virM", // x_rdata[20]
};

std::array<const char*, 22> observableIds = {
    "ysusceptible_countryA_vac0", // y[0]
"ysusceptible_countryA_vac1", // y[1]
"ysusceptible_countryA_vac2", // y[2]
"yinfectious_countryA_vac0_virW", // y[3]
"yinfectious_countryA_vac0_virM", // y[4]
"yinfectious_countryA_vac1_virW", // y[5]
"yinfectious_countryA_vac1_virM", // y[6]
"yinfectious_countryA_vac2_virW", // y[7]
"yinfectious_countryA_vac2_virM", // y[8]
"yrecovered_countryA_vac0_virW", // y[9]
"yrecovered_countryA_vac0_virM", // y[10]
"yrecovered_countryA_vac1_virW", // y[11]
"yrecovered_countryA_vac1_virM", // y[12]
"yrecovered_countryA_vac2_virW", // y[13]
"yrecovered_countryA_vac2_virM", // y[14]
"ydead_countryA_vac0_virW", // y[15]
"ydead_countryA_vac0_virM", // y[16]
"ydead_countryA_vac1_virW", // y[17]
"ydead_countryA_vac1_virM", // y[18]
"ydead_countryA_vac2_virW", // y[19]
"ydead_countryA_vac2_virM", // y[20]
"ycountryA", // y[21]
};

std::array<const char*, 36> expressionIds = {
    "flux_r0", // w[0]
"flux_r1", // w[1]
"flux_r2", // w[2]
"flux_r3", // w[3]
"flux_r4", // w[4]
"flux_r5", // w[5]
"flux_r6", // w[6]
"flux_r7", // w[7]
"flux_r8", // w[8]
"flux_r9", // w[9]
"flux_r10", // w[10]
"flux_r11", // w[11]
"flux_r12", // w[12]
"flux_r13", // w[13]
"flux_r14", // w[14]
"flux_r15", // w[15]
"flux_r16", // w[16]
"flux_r17", // w[17]
"flux_r18", // w[18]
"flux_r19", // w[19]
"flux_r20", // w[20]
"flux_r21", // w[21]
"flux_r22", // w[22]
"flux_r23", // w[23]
"flux_r24", // w[24]
"flux_r25", // w[25]
"flux_r26", // w[26]
"flux_r27", // w[27]
"flux_r28", // w[28]
"flux_r29", // w[29]
"flux_r30", // w[30]
"flux_r31", // w[31]
"flux_r32", // w[32]
"flux_r33", // w[33]
"flux_r34", // w[34]
"flux_r35", // w[35]
};

} // namespace model_one_country

} // namespace amici
